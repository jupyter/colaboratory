#!/bin/bash
# Builds and installs the Chrome app

set -x

if [ ! -z "$1" ]; then
  CHROME_APP_VERSION="$1"
else
  CHROME_APP_VERSION="DEBUG"
fi

# make directory for Chrome app build
DEST=build_chrome

# stage static files
./bundle_static $DEST

# copy chrome app files, putting pnacl files in root
# as the folder structure is hard coded into the pnacl kernel code
# right now
cp -r chrome/* $DEST
cp chrome/pnacl/* $DEST

# Unzip resources file for PNaCl kernel, add extra modules, and zip.
PNACL_RESOURCES_FILE="zeropy_20140520.tar.gz"
PYTHON_LIBRARIES_PATH="lib/python2.7/site-packages"
TMP_RESOURCES_DIR="$DEST/pnacl_resources"
COLABTOOLS_DIR="colabtools"
COLABTOOLS_DEST="$TMP_RESOURCES_DIR/$PYTHON_LIBRARIES_PATH/$COLABTOOLS_DIR"
mkdir -p "$TMP_RESOURCES_DIR"
tar -zxvf "chrome/pnacl/$PNACL_RESOURCES_FILE" -C "$TMP_RESOURCES_DIR"
mkdir -p "$COLABTOOLS_DEST"
cp -f $COLABTOOLS_DIR/* "$COLABTOOLS_DEST"
tar -zcvf "$DEST/$PNACL_RESOURCES_FILE" -C "$TMP_RESOURCES_DIR" .
rm -rf "$TMP_RESOURCES_DIR"

# Override client ID's in manifest
if [ "$CHROME_APP_VERSION" == "RELEASE" ]; then
  python generate_release_manifest.py "$DEST/manifest.json"
fi