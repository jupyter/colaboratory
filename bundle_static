#!/bin/bash
# Stage the static resources tree
#
# This script copies the various resources to their fixed static paths.
# If an argument is given, it's interpreted as a path in which `static` should be created.
#
# Needed by the Chrome App and statically hosted colaboratory files.

set -e
HERE=$(dirname $0)
if [ ! -z "$1" ]; then
  DEST="$1"
else
  DEST="$HERE/build"
fi


# prepare the destination directory
test -d "$DEST" || mkdir -p "$DEST"

for d in colab extern ipython closure; do
  echo "rm -rf $DEST/$d"
  rm -rf "$DEST/$d"
done

IPYTHON_STATIC=`python -c 'import IPython.html; print(IPython.html.DEFAULT_STATIC_FILES_PATH)'`
COLAB_RESOURCES="$HERE/colaboratory/resources"
COLAB_STATIC="$HERE/static"
CLOSURE="$COLAB_RESOURCES/closure-library/closure/goog"

set -x

pushd $HERE > /dev/null
git submodule init && git submodule update
popd > /dev/null


# stage the basic colab and extern directories
cp -r "$COLAB_STATIC/" "$DEST/"
cp -r "$COLAB_RESOURCES/colab/" "$DEST/colab/"
cp -r "$COLAB_RESOURCES/extern/" "$DEST/extern/"

# stage IPython's static files, then clobber them with patched versions
cp -r "$IPYTHON_STATIC/" "$DEST/ipython/"
rm -rf "$DEST/ipython/components/.git"
cp -r "$COLAB_RESOURCES/ipython_patch/" "$DEST/ipython/"

# stage closure from the submodule
cp -r "$CLOSURE/" "$DEST/closure/"
